import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    sourceSets {
        main {
            jniLibs.srcDirs 'libs'
        }
        defaultConfig {
            applicationId "com.view.cameralive"
            minSdkVersion 19
            targetSdkVersion 22
            versionCode 1
            versionName "1.0"

        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}


task ndkBuild(type: Exec) {
    workingDir file('jni')
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        commandLine getNdkDir() + "/ndk-build.cmd"
    else
        commandLine getNdkDir() + "/ndk-build"
}

task cleanNative(type: Exec) {
    workingDir file('jni')
    if (Os.isFamily(Os.FAMILY_WINDOWS))
        commandLine getNdkDir() + "/ndk-build.cmd", 'clean'
    else
        commandLine getNdkDir() + "/ndk-build", 'clean'

}

clean.dependsOn cleanNative

def getNdkDir() {
    if (System.env.ANDROID_NDK_ROOT != null)
        return System.env.ANDROID_NDK_ROOT

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkdir = properties.getProperty('ndk.dir', null)

    if (ndkdir == null)
        throw new GradleException("NDK location not found,please set NDK env!")

    return ndkdir
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:23.0.0'
    compile "com.android.support:support-v13:23.0.1"
    compile 'com.android.support:appcompat-v7:23.0.1'
}
